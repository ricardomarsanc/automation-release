name: Create release branch (new)

on:
  workflow_dispatch:
    inputs:
      release_type:
        type: choice
        required: true
        description: "Release type"
        options:
          - "minor"
          - "hotfix"
          - "major"

jobs:
  check_version:
    name: Set next project version based on type of release
    runs-on: ubuntu-20.04
    outputs:
      current_version: ${{ steps.get_version.outputs.current_version }}
      new_version: ${{ steps.set_new_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Node Setup
        uses: ./.github/actions/setup-node
      - name: Validate version
        id: get_version
        shell: bash
        run: |
          ver="$(node -p "require('./package.json').version")"
          echo "::set-output name=current_version::$ver"
      - name: Install semver
        run: npm i semver
      - name: Install actions/core
        run: npm i @actions/core
      - run: npm ci
      - name: Set new project version
        id: set_semver_version
        uses: ./.github/actions/check-project-version
        with:
          release-type: ${{ github.event.inputs.release_type }}
          version: ${{ steps.get_version.outputs.version }}
      - name: Set new version output
        id: set_new_version
        run: |
          new_ver="${{ steps.set_semver_version.outputs.new_version }}"
          "::set-output name=new_version::$new_ver"
  # create_pr:
  #   name: Create Pull Request
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #         ref: develop
  #     - name: Update branch with master
  #       run: |
  #         git config user.name "${{ github.actor }}"
  #         git config user.email "${{ github.actor }}@users.noreply.github.com"
  #         git fetch --all
  #         git merge origin/master --no-commit
  #     - name: Make changes
  #       run: |
  #         git config user.name "${{ github.actor }}"
  #         git config user.email "${{ github.actor }}@users.noreply.github.com"
  #         npm version ${{ github.event.inputs.version }} --allow-same-version --no-git-tag-version
  #     - name: Create Pull Request
  #       uses: peter-evans/create-pull-request@v4
  #       with:
  #         title: "[CI/CD] Release v${{ github.event.inputs.version }}"
  #         base: master
  #         commit-message: Merge w/main & Update version to v${{ github.event.inputs.version }}
  #         branch: release/v${{ github.event.inputs.version }}
  #         body: v${{ github.event.inputs.version }}
  #         labels: |
  #           'release'
  #           'automated'
  #           'v${{ github.event.inputs.version }}'
